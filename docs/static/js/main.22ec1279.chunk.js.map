{"version":3,"sources":["components/AddCategpry.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategpry","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACE,sBAAMC,SAVa,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAMpB,SACE,uBACAO,KAAM,OACNC,MAAUT,EACVU,SAlBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,mCACI,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,UCJPS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAY,IAAD,EAETd,mBAAS,CAChCqB,KAAM,GACNe,SAAS,IAJuB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAgBpC,OATJC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGnB,CAACtB,IACQuB,EDRuBK,CAAa5B,GAA/Ba,EANuB,EAM5BN,KAAYe,EANgB,EAMhBA,QAEnB,OACI,qCACI,6BAAKtB,IACJsB,GAAW,8CACZ,qBAAKJ,UAAU,8CAAf,SAEOL,EAAOJ,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEaxBkB,EA9BM,WAAM,IAAD,EAEc3C,mBAAU,CAAC,KAFzB,mBAEf4C,EAFe,KAEH7C,EAFG,KAOtB,OACI,qCACI,8CACA,uBAEF,cAAC,EAAD,CAAaA,cAAiBA,IAMpB6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,U,MClBpC+B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22ec1279.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategpry = ({setCategories}) => {\r\n    const [inputValue, setInputValue]= useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n      <form onSubmit= {handleSubmit}>\r\n        <input \r\n        type= \"text\"\r\n        value = { inputValue } \r\n        onChange ={handleInputChange}/>\r\n      </form>\r\n    )\r\n}\r\nAddCategpry.propTypes={\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async( category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=saeFo2YDVZVvRIw3oWjGYSPr6CRrfD39&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <img src={url} alt={title}/>\r\n                <p>{title}</p>\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n// const [images, setImages] = useState([]);\r\n\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>'Cargando...'</p> }\r\n            <div className=\"animate__animated animate__bounce card-grid\">\r\n                {\r\n                   images.map((img)=>(\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const  [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\nuseEffect(()=>{\r\n    getGifs(category)\r\n    .then(imgs =>{\r\n        setstate({\r\n            data: imgs,\r\n            loading: false\r\n        });\r\n    })\r\n},[category])\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategpry } from './components/AddCategpry';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState( ['']);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n          <AddCategpry setCategories = {setCategories}>\r\n\r\n          </AddCategpry>\r\n\r\n            \r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid \r\n                            key = { category}\r\n                            category = { category}\r\n                        />\r\n                    )\r\n                }\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,  \n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}